library(move)
library(sf)
library(wildlifeHI)
load('D:/RPackages/MoveApps/hi_buffer/data/raw/fishers.rds')
#Full Fishers dataset
fishers <- move("D:/RPackages/wildlifeHI/Martes pennanti LaPoint New York.csv")
fishers
m1 <- fishers[[id]]
ids <- trackId(fishers)
id <- ids[1]
id
m1 <- fishers[[id]]
m1
bb <- st_bbox(m1)
bb
c(id,bb)
c(as.character(id),bb)
?sapply(list, function)
sapply(fishers,st_bbox)
ids <- trackId(fishers)
bbdf <- NULL
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
x <- c(as.character(id),bb)
bbdf <- rbind(bbdf,x)
}
id
ids
ids <- unique(trackId(fishers))
ids
ids <- unique(trackId(fishers))
bbdf <- NULL
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
x <- c(as.character(id),bb)
bbdf <- rbind(bbdf,x)
}
bbdf
ids <- unique(trackId(fishers))
bbdf <- data.frame()
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
x <- c(as.character(id),bb)
bbdf <- rbind(bbdf,x)
}
bbdf
ids <- unique(trackId(fishers))
bbdf <- data.frame()
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
a <- st_area(bb)
x <- c(as.character(id),bb,a)
bbdf <- rbind(bbdf,x)
}
ids <- unique(trackId(fishers))
bbdf <- data.frame()
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
a <- st_area(st_as_sfc(bb))
x <- c(as.character(id),bb,a)
bbdf <- rbind(bbdf,x)
}
bbdf
bb
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_area')
summary(bb)
summary(bbdf)
ids <- unique(trackId(fishers))
bbdf <- data.frame()
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
a <- st_area(st_as_sfc(bb))
x <- c(as.character(id),as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
}
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_area')
bbdf
summary(bbdf)
as.numeric(bb)
as.numeric(a)
ids <- unique(trackId(fishers))
bbdf <- data.frame()
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
a <- st_area(st_as_sfc(bb))
x <- c(as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
}
bbdf
summary(bbdf)
bbdf <- cbind(ids,bbdf)
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_area')
bbdf
summary(bbdf)
st_area
?st_area
library(units)
aa <- set_units(a,'ha')
aa
ids <- unique(trackId(fishers))
bbdf <- data.frame()
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
a <- st_area(st_as_sfc(bb))
a <- set_units(a,'ha')
x <- c(as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
}
bbdf <- cbind(ids,bbdf)
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_ha')
bbdf
ids <- unique(trackId(fishers))
bbdf <- data.frame()
sf_all <- NULL
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
bbsf <- st_as_sfc(bb)
a <- set_units(st_area(bbsf),'ha')
x <- c(as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
##
sf_all <- c(sf_all,bbsf)
}
bbdf <- cbind(ids,bbdf)
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_ha')
sf_all
sf_all2 <- st_as_sf(sf_all)
sf_all2 <- st_as_sfc(sf_all)
sf_all2
st_crs(bbsf)
data_crs <- st_crs(fishers)
sf_all2 <- st_as_sfc(sf_all,crs=data_crs)
mapview(sf_all2)
library(mapview)
mapview(sf_all2)
move <- wolves
wolves <- move("D:/RPackages/wildlifeHI/Hebblewhite Alberta-BC Wolves.csv")
move <- wolves
ids <- unique(trackId(move))
bbdf <- data.frame()
sf_all <- NULL
data_crs <- st_crs(move)
for (id in ids){
m1 <- fishers[[id]]
bb <- st_bbox(m1)
bbsf <- st_as_sfc(bb)
a <- set_units(st_area(bbsf),'ha')
x <- c(as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
##
sf_all <- c(sf_all,bbsf)
}
move <- wolves
ids <- unique(trackId(move))
bbdf <- data.frame()
sf_all <- NULL
data_crs <- st_crs(move)
for (id in ids){
m1 <- move[[id]]
bb <- st_bbox(m1)
bbsf <- st_as_sfc(bb)
a <- set_units(st_area(bbsf),'ha')
x <- c(as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
##
sf_all <- c(sf_all,bbsf)
}
bbdf <- cbind(ids,bbdf)
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_ha')
sf_all2 <- st_as_sfc(sf_all,crs=data_crs)
mapview(sf_all2)
bbdf
?do.call
?moveStack
tz <- att(timestamps(move),'tzone')
tz <- attr(timestamps(move),'tzone')
tz
?hi_nearest
?hi_nearest_distance
hi_by_individual <- function(move,fun="hi_distance",...){
tz <- attr(timestamps(move),'tzone')
ids <- trackId(move)
out_move <- NULL
for (id in ids){
m1 <- move[[id]]
hi_f <- match.fun(fun)
temp <- hi_f(m1,...)
out_move <- moveStack(out_move,temp,forceTz=tz)
}
return(out_move)
}
hi_by_individual(fishers,fun='hi_distance')
move <- fishers
m1 <- move[[id]]
hi_f <- match.fun(fun)
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
fun <- 'hi_distance'
tz <- attr(timestamps(move),'tzone')
ids <- trackId(move)
out_move <- NULL
id <- ids[1]
m1 <- move[[id]]
hi_f <- match.fun(fun)
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
m1
#library(wildlifeHI)
devtools::load_all('D:/RPackages/wildlifeHI/wildlifeHI/R/')
#library(wildlifeHI)
devtools::load_all('D:/RPackages/wildlifeHI/wildlifeHI/')
m1 <- move[[id]]
m1 <- move[[id]]
hi_f <- match.fun(fun)
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
out_move <- moveStack(out_move,temp,forceTz=tz)
m1
temp
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
if (!is.null(out_move)){
out_move <- moveStack(out_move,temp,forceTz=tz)
} else {
out_move <- temp
}
for (id in ids){
m1 <- move[[id]]
hi_f <- match.fun(fun)
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
if (!is.null(out_move)){
out_move <- moveStack(out_move,temp,forceTz=tz)
} else {
out_move <- temp
}
}
tz <- attr(timestamps(move),'tzone')
ids <- trackId(move)
tdif <- NULL
out_move <- NULL
id
m1 <- move[[id]]
hi_f <- match.fun(fun)
m1 <- move[[id]]
#temp <- hi_f(m1,...)
t1 <- System.time()
temp <- hi_f(m1)
t2 <- System.time()
#temp <- hi_f(m1,...)
t1 <- Sys.time()
temp <- hi_f(m1)
t2 <- Sys.time()
tdiff <- c(tdiff,t2-t1)
tdif <- NULL
out_move <- NULL
hi_f <- match.fun(fun)
m1 <- move[[id]]
#temp <- hi_f(m1,...)
t1 <- Sys.time()
temp <- hi_f(m1)
t2 <- Sys.time()
tdiff <- c(tdiff,t2-t1)
tdiff <- NULL
m1 <- move[[id]]
#temp <- hi_f(m1,...)
t1 <- Sys.time()
temp <- hi_f(m1)
t2 <- Sys.time()
tdiff <- c(tdiff,t2-t1)
tdiff
temp
out_move <- NULL
if (!is.null(out_move)){
out_move <- moveStack(out_move,temp,forceTz=tz)
} else {
out_move <- temp
}
out_move
head(out_move)
tz <- attr(timestamps(move),'tzone')
ids <- trackId(move)
tdiff <- NULL
out_move <- NULL
hi_f <- match.fun(fun)
for (id in ids){
m1 <- move[[id]]
#temp <- hi_f(m1,...)
t1 <- Sys.time()
temp <- hi_f(m1)
t2 <- Sys.time()
tdiff <- c(tdiff,t2-t1)
if (!is.null(out_move)){
out_move <- moveStack(out_move,temp,forceTz=tz)
} else {
out_move <- temp
}
}
warnings()
bbdf
move <- fishers
ids <- unique(trackId(move))
bbdf <- data.frame()
sf_all <- NULL
data_crs <- st_crs(move)
for (id in ids){
m1 <- move[[id]]
bb <- st_bbox(m1)
bbsf <- st_as_sfc(bb)
a <- set_units(st_area(bbsf),'ha')
x <- c(as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
##
sf_all <- c(sf_all,bbsf)
}
bbdf <- cbind(ids,bbdf)
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_ha')
sf_all2 <- st_as_sfc(sf_all,crs=data_crs)
tz <- attr(timestamps(move),'tzone')
ids <- unique(trackId(move))
tdiff <- NULL
out_move <- NULL
hi_f <- match.fun(fun)
for (id in ids){
m1 <- move[[id]]
t1 <- Sys.time()
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
t2 <- Sys.time()
tdiff <- c(tdiff,t2-t1)
if (!is.null(out_move)){
out_move <- moveStack(out_move,temp,forceTz=tz)
} else {
out_move <- temp
}
}
tz <- attr(timestamps(move),'tzone')
ids <- unique(trackId(move))
tdiff <- NULL
out_move <- NULL
hi_f <- match.fun(fun)
for (id in ids){
tz <- attr(timestamps(move),'tzone')
ids <- unique(trackId(move))
tdiff <- NULL
out_move <- NULL
hi_f <- match.fun(fun)
for (id in ids){
print(paste0('processing: ',id))
m1 <- move[[id]]
t1 <- Sys.time()
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
t2 <- Sys.time()
tdiff <- c(tdiff,t2-t1)
if (!is.null(out_move)){
out_move <- moveStack(out_move,temp,forceTz=tz)
} else {
out_move <- temp
}
}
bbdf$ptime <- tdiff
bbdf
move <- wolves
ids <- unique(trackId(move))
bbdf <- data.frame()
sf_all <- NULL
data_crs <- st_crs(move)
for (id in ids){
m1 <- move[[id]]
bb <- st_bbox(m1)
bbsf <- st_as_sfc(bb)
a <- set_units(st_area(bbsf),'ha')
x <- c(as.numeric(bb),as.numeric(a))
bbdf <- rbind(bbdf,x)
##
sf_all <- c(sf_all,bbsf)
}
bbdf <- cbind(ids,bbdf)
names(bbdf) <- c('trackId','xmin','ymin','xmax','ymax','bb_ha')
sf_all2 <- st_as_sfc(sf_all,crs=data_crs)
#hi_by_individual <- function(move,fun="hi_distance",...){
tz <- attr(timestamps(move),'tzone')
ids <- unique(trackId(move))
tdiff <- NULL
out_move <- NULL
hi_f <- match.fun(fun)
for (id in ids){
print(paste0('processing: ',id))
m1 <- move[[id]]
t1 <- Sys.time()
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
t2 <- Sys.time()
tdiff <- c(tdiff,t2-t1)
if (!is.null(out_move)){
out_move <- moveStack(out_move,temp,forceTz=tz)
} else {
out_move <- temp
}
}
tdiff
id
m1 <- move[[id]]
plot(m1)
key <- 'highway'
move <- m1
geom='line'
poly2line=TRUE
bbox <- st_bbox(move)
x10 <- (bbox$xmax - bbox$xmin)*0.1
y10 <- (bbox$ymax - bbox$ymin)*0.1
bbox <- bbox + c(-x10,-y10,x10,y10)
osmdata <- try ({
#could modify OSM values to facilitate larger bboxes (e.g., memsize or timeout)
opq (bbox = bbox) |>
add_osm_feature (key = key) |>
osmdata_sf ()
})
osmdata
temp_ln <- osmdata$osm_lines
if (length(temp_ln)>0) {
temp_ln$key <- key
temp_ln$value <- st_drop_geometry(temp_ln)[,key]
temp_ln <- temp_ln[,c('osm_id','name','key','value')]
if (!is.null(osmdata$osm_multilines)){
suppressWarnings(temp_ln2 <- osmdata$osm_multilines |> st_cast('LINESTRING'))
temp_ln2$key <- key
temp_ln2$value <- st_drop_geometry(temp_ln2)[,key]
temp_ln <- rbind(temp_ln,temp_ln2[,c('osm_id','name','key','value')])
}
osm_sf <- rbind(osm_sf,temp_ln)
}
temp_ln$key <- key
temp_ln$value <- st_drop_geometry(temp_ln)[,key]
temp_ln <- temp_ln[,c('osm_id','name','key','value')]
temp_ln
osmdata
osmdata$osm_lines
osmdata$osm_points
osmdata$osm_polygons
temp <- osmdata$osm_lines
if (!exists(temp$osm_id)) { temp$osm_id <- row.names(temp)}
temp$osm_id
#library(wildlifeHI)
devtools::load_all('D:/RPackages/wildlifeHI/wildlifeHI/')
id
move <- wolves
m1 <- move[[id]]
t1 <- Sys.time()
#temp <- hi_f(m1,...)
temp <- hi_f(m1)
library(move)
library(sf)
library(units)
library(mapview)
#library(wildlifeHI)
devtools::load_all('D:/RPackages/wildlifeHI/wildlifeHI/')
